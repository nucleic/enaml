name: Continuous Integration
on:
  schedule:
    - cron: '0 0 * * 2'
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    paths:
      - .github/workflows/ci.yml
      - "enaml/**"
      - "examples/**"
      - "tests/**"
      - setup.py

jobs:
  tests:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]
        # Add PySide2 when github will allow for allowed-failures or when it works
        qt-binding: [pyqt5]
      fail-fast: false
    steps:
      - name: Install linux only test dependency
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt-get install libxcb-randr0-dev libxcb-xtest0-dev libxcb-xinerama0-dev libxcb-shape0-dev libxcb-xkb-dev libegl1-mesa libxkbcommon-x11-0 matchbox-window-manager
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bytecode ply qtpy numpy
          pip install https://github.com/nucleic/cppy/tarball/master
          pip install https://github.com/nucleic/atom/tarball/master
          pip install https://github.com/nucleic/kiwi/tarball/master
      - name: Install PyQt as Qt bindings
        run: |
          pip install numpy 'pyqt5!=5.15'
      - name: Install extra dependencies
        if: matrix.python-version == 3.7
        run: |
          pip install matplotlib ipython qtconsole Cython QScintilla
      - name: Install project
        env:
          CPPFLAGS: --coverage
        run: |
          python setup.py develop
      - name: Install pytest
        run: |
          pip install pytest pytest-cov pytest-qt
      - name: Run tests (Windows, Mac)
        if: matrix.os != 'ubuntu-latest'
        run: python -m pytest tests --cov enaml --cov-report xml
      - name: Run tests (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash -l {0}
        run: |
          export DISPLAY=:99.0
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX +render -noreset
          sleep 3
          matchbox-window-manager &
          sleep 1
          python -m pytest tests --cov enaml --cov-report xml

      # Windows does not have C coverage so the upload is a bit different
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        if: matrix.os == 'windows-latest'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        if: matrix.os != 'windows-latest'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
